#!/bin/bash

owned=
exe_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

launch () {
    if [ -n "$DBG_NO_TMUX" ]; then
        parent=$($exe_dir/daemon urxvt -e "$@")
        pid=
        while [ -z "$pid" ]; do pid=$(pgrep -P $parent); done
        owned="$owned $parent"
        pts="/dev/$(ps -o tty= --pid=$pid)"
    else
        current_pane=$(tmux list-panes -F '#{?pane_active,active,} #{pane_id}' | grep active | awk '{ print $2 }')
        this_tty=$(ps -o tty= --pid $$)
        this_pane=$(tmux list-panes -F '#{pane_tty} #{pane_id}' | grep "$this_tty" | awk '{ print $2 }')
        tmux select-pane -t $this_pane
        cmd=
        for arg in "$@"; do
            cmd="$cmd \"$arg\""
        done
        if [ -z "$horizontal" ]; then
            tmux split-window -p 30 "$cmd"
            tmux swap-pane -s $this_pane
        else
            tmux split-window -h "$cmd"
        fi
        new_pane=$(tmux list-panes -F '#{?pane_active,active,} #{pane_pid} #{pane_tty}' | grep active | awk '{ print $2, $3 }')
        owned="$owned $(echo $new_pane | awk '{ print $1 }')"
        pts=$(echo $new_pane | awk '{ print $2 }')
        tmux select-pane -t $current_pane
    fi
}

if [ -z "$EXTERMINATOR_FILE" ]; then
    VIM_SERVERNAME="DBG.$$"
    file=$(mktemp)
    launch vim -c "let g:session_autoload='no'" -c "let g:exterminator_file='$file'" --servername $VIM_SERVERNAME
else
    file=$EXTERMINATOR_FILE
fi

launch $exe_dir/signal-passer $$

echo Debugging in $(pwd): $@ > $pts
echo > $pts

gdb -ex "tty $pts" -x $exe_dir/gdb_fancy.py -args "$@"

kill $owned 2>/dev/null

rm $file
